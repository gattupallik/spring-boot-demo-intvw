name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK 17
        run: |
          sudo apt-get update
          sudo apt-get install -y openjdk-17-jdk
          sudo rm -rf /var/lib/apt/lists/*

      - name: Setup Maven
        run: |
          echo "Installing Maven"
          sudo apt-get update
          sudo apt-get install -y maven
          sudo rm -rf /var/lib/apt/lists/*

      - name: Build with Maven
        run: |
          cd demo
          ls -l
          mvn clean install

      - name: Back to root
        run: cd ..

      - name: Build Docker image
        run: |
          docker build -t gattupallik/demo-springboot:latest .
          echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
          docker push gattupallik/demo-springboot:latest

      - name: Set up AWS credentials
        uses: aws-actions/configure-aws-credentials@v1-node16
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-west-2

      - name: Install kubectl
        run: |
          curl -LO "https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl"
          chmod +x ./kubectl
          sudo mv ./kubectl /usr/local/bin/kubectl

      - name: Install eksctl
        run: |
          curl --silent --location "https://github.com/weaveworks/eksctl/releases/download/0.50.0/eksctl_$(uname -s)_amd64.tar.gz" | tar xz -C /tmp
          sudo mv /tmp/eksctl /usr/local/bin

      - name: Configure kubectl with EKS cluster
        run: eksctl utils write-kubeconfig --region us-west-2 --cluster springboot-cluster

      - name: Deploy to EKS
        run: |
          kubectl apply -f k8s/deployment.yaml
          kubectl apply -f k8s/service.yaml
